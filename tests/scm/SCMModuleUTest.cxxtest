
#include <iostream>

#include <opencog/util/Logger.h>
#include <opencog/atomspace/AtomSpace.h>
#include <opencog/guile/SchemeEval.h>

using namespace opencog;

class SCMModuleUTest : public CxxTest::TestSuite
{
private:
    AtomSpace _as;
    SchemeEval _scm;
public:
    SCMModuleUTest() : _scm(&_as)
    {
        // Print output to standard
        logger().setLevel(Logger::DEBUG);
        logger().setPrintToStdoutFlag(true);
        logger().setPrintLevelFlag(true);
    }

    ~SCMModuleUTest()
    {
        // erase the log file if no assertions failed
        //if (!CxxTest::TestTracker::tracker().suiteFailed())
        //    std::remove(logger().getFilename().c_str());
    }

    void setUp()
    {
        std::cout <<_scm.eval("(add-to-load-path \"/usr/local/share/opencog/scm\")");
        std::cout << _scm.eval("(use-modules (opencog))");
        // cout << _scm.eval("(load \"test-rbs.scm\")");
        std::cout << _scm.eval("(ConceptNode \"asdf\")");
    }

    void test_constuctor()
    {
        std::cout << "Ola!\n";
    }
};
